/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package package1;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.*;
import javax.swing.JOptionPane;
import java.lang.*;
import java.util.Arrays;
import javax.swing.JPasswordField;

/**
 *
 * @author GG
 */
public class Update extends javax.swing.JFrame {
    boolean search=true;
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    
    /**
     * Creates new form Update
     */
    public Update() {
        initComponents();
        Connect();
        textName.setText("");
        textName.setEnabled(true);
        textLast.setText("");
        textLast.setEnabled(false);
        textAddress.setText("");
        textAddress.setEnabled(false);
        textMobileNo.setText("");
        textMobileNo.setEnabled(false);
        textEmail.setText("");
        textEmail.setEnabled(false);
        textPass.setText("");
        textPass.setEnabled(false);
        

        editButton.setEnabled(false);

        Update.this.setLocation(330,140);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        searchId = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        textName = new javax.swing.JTextField();
        textLast = new javax.swing.JTextField();
        textAddress = new javax.swing.JTextField();
        textMobileNo = new javax.swing.JTextField();
        textEmail = new javax.swing.JTextField();
        textPass = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID Number:");

        jLabel2.setText("First Name:");

        jLabel3.setText("Last Name:");

        jLabel4.setText("Address:");

        jLabel5.setText("Mobile No.:");

        jLabel6.setText("Email:");

        jLabel7.setText("Password:");

        SearchButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        editButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        editButton.setText("Update");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        textEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textEmailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textPass, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                    .addComponent(textMobileNo)
                    .addComponent(textEmail)
                    .addComponent(textAddress)
                    .addComponent(textLast)
                    .addComponent(textName)
                    .addComponent(searchId))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editButton)
                    .addComponent(SearchButton)
                    .addComponent(deleteButton))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(searchId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(textEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(textPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textEmailActionPerformed
   
    //search
    public void Connect()
    {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/projectdb","root","shanejen0714!");
            
        } catch (ClassNotFoundException ex) {
          
        } catch (SQLException ex) {
          
        }
    }
    
    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        // TODO add your handling code here:
        try {
            pst = con.prepareStatement("select Id,fname,lname,address, mobileno,email, password from reg_table where Id=? ");
            int id = Integer.parseInt(searchId.getText());
            pst.setInt(1, id);
            ResultSet rs1 = pst.executeQuery();
            if (rs1.next() == false) {
                JOptionPane.showMessageDialog(this, "Sorry Record Not Found");
                textName.setText("");
                textLast.setText("");
                textAddress.setText("");
                textMobileNo.setText("");
                textEmail.setText("");
                textPass.setText("");

                // Disable email and password fields on unsuccessful search
                textEmail.setEnabled(false);
                textPass.setEnabled(false);

                searchId.requestFocus();
            } else {
                textName.setText(rs1.getString("fname"));
                textLast.setText(rs1.getString("lname"));
                textAddress.setText(rs1.getString("address"));
                textMobileNo.setText(rs1.getString("mobileno"));
                textEmail.setText(rs1.getString("email"));
                textPass.setText(rs1.getString("password"));

                // Enable email and password fields on successful search
                textEmail.setEnabled(true);
                textPass.setEnabled(true);

                editButton.setEnabled(true);
            }

        } catch (SQLException ex) {
            // Handle the exception
        }
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
    int answer;
        answer = JOptionPane.showConfirmDialog(null, "Are you sure you want to update this record?", "System Message", JOptionPane.YES_NO_OPTION);
        if (answer == JOptionPane.YES_OPTION) {
            try {
                deleteButton.setEnabled(false);
                Connection cn;
                Statement st;
                String url;
                url = "jdbc:mysql://localhost:3306/projectdb";
                Class.forName("com.mysql.cj.jdbc.Driver");
                cn = (Connection) DriverManager.getConnection(url, "root", "shanejen0714!");
                st = (Statement) cn.createStatement();

                // Validate email and password
                if (!isValidEmail(textEmail.getText())) {
                    JOptionPane.showMessageDialog(null, "Invalid email format. Record not updated.", "System Message", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                char[] newPassword = textPass.getPassword();
                if (newPassword.length < 8) {
                    JOptionPane.showMessageDialog(null, "Password must be at least 8 characters long. Record not updated.", "System Message", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                // Update the record with the new password
                st.executeUpdate("UPDATE reg_table SET fname= '"
                        + textName.getText() + "',lname= '"
                        + textLast.getText() + "', address= '"
                        + textAddress.getText() + "',mobileno= '"
                        + textMobileNo.getText() + "',email = '"
                        + textEmail.getText() + "',password='"
                        + textPass.getText()
                        + "'Where Id = '"
                        + searchId.getText() + "' ");

                // After updating the password, ask for confirmation
                char[] confirmPassword = getPasswordConfirmation();

                if (!passwordMatches(newPassword, confirmPassword)) {
                    JOptionPane.showMessageDialog(null, "Password and confirmation do not match. Record not updated.", "System Message", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                JOptionPane.showMessageDialog(null, "Record Updated", "System Message", JOptionPane.INFORMATION_MESSAGE);

                textName.setText("");
                textLast.setText("");
                textAddress.setText("");
                textMobileNo.setText("");
                textEmail.setEnabled(false);
                textPass.setText("");

                } catch (ClassNotFoundException ex) {
                //Logger.getLogger(frameTerminateEdit.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                //Logger.getLogger(frameTerminateEdit.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private boolean isValidEmail(String email) {
        return email.matches("^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$");
    }
    
    private char[] getPasswordConfirmation() {
        JPasswordField confirmPassField = new JPasswordField();
        Object[] message = {"Confirm Password:", confirmPassField};
        int option = JOptionPane.showConfirmDialog(null, message, "Confirm Password", JOptionPane.OK_CANCEL_OPTION);

        if (option == JOptionPane.OK_OPTION) {
            return confirmPassField.getPassword();
        } else {
            return null;
        }
    }

    private boolean passwordMatches(char[] password, char[] confirmation) {
        return Arrays.equals(password, confirmation);
    }
    
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int answer;
        answer = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this record?","System Message",JOptionPane.YES_NO_OPTION);
        if(answer==JOptionPane.YES_OPTION){
            try {
             Connection cn;
            Statement st;
            String url;



            url = "jdbc:mysql://localhost:3306/projectdb";
            cn = (Connection) DriverManager.getConnection(url, "root","shanejen0714!");
            st = (Statement) cn.createStatement();
            st.executeUpdate("UPDATE reg_table SET  fname= '"+textName.getText()+
                     "',lname= '"+textLast.getText()+
                     "', address= '"+textAddress.getText()+
                     "',mobileno= '"+textMobileNo.getText()+
                     "',email = '"+textEmail.getText()+
                      "',password = '"+textPass.getText()+
                     "'Where Id = '"+searchId.getText()+"' ");

                String query;
                query = "Delete From reg_table Where Id='" + searchId.getText() + "'";
                st.executeUpdate(query);
                JOptionPane.showMessageDialog(null, "Record Deleted","System Message",JOptionPane.INFORMATION_MESSAGE);
                textName.setText("");
                textLast.setText("");
                textAddress.setText("");
                textMobileNo.setText("");
                textEmail.setText("");
                textPass.setText("");
           
            
                } catch (SQLException ex) {
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Update().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SearchButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField searchId;
    private javax.swing.JTextField textAddress;
    private javax.swing.JTextField textEmail;
    private javax.swing.JTextField textLast;
    private javax.swing.JTextField textMobileNo;
    private javax.swing.JTextField textName;
    private javax.swing.JPasswordField textPass;
    // End of variables declaration//GEN-END:variables
}
